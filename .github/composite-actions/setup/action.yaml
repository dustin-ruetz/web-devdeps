# https://docs.github.com/en/actions/creating-actions/creating-a-composite-action
# https://www.wesbraga.dev/posts/how-to-use-shared-run-steps-github-actions

name: setup
description: Composite action to make shared setup-related tasks reusable by multiple workflows.
inputs:
  node-version:
    description: Node.js version number; passed to actions/setup-node.
    required: false
  node-version-file:
    description: Path to file specifying the Node.js version number; passed to actions/setup-node.
    required: false
runs:
  using: composite
  steps:
    # https://pnpm.io/continuous-integration#github-actions
    # https://github.com/pnpm/action-setup
    - name: üü® Install pnpm
      uses: pnpm/action-setup@v4
    # https://github.com/actions/setup-node
    - name: ‚¨¢ Setup Node.js
      uses: actions/setup-node@v4
      with:
        # https://github.com/actions/setup-node#caching-global-packages-data
        cache: pnpm
        node-version: ${{ inputs.node-version }}
        node-version-file: ${{ inputs.node-version-file }}
    - name: ‚¨áÔ∏è Install dependencies
      run: pnpm install
      shell: bash
    - name: üëÄ Audit dependency signatures
      # - Verify the integrity of provenance attestations and registry signatures for installed dependencies.
      # - Note: pnpm does not currently have an equivalent implementation of this command.
      # https://docs.npmjs.com/cli/v11/commands/npm-audit#audit-signatures
      run: npm audit signatures
      shell: bash
